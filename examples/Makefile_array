# Compiler settings
CC = gcc
CFLAGS = -Wall -Wextra -std=c99 -I../include

# Directories
SRC_DIR = ../src/linkedList
OBJ_DIR = obj
BIN_DIR = ../bin
TARGET = $(BIN_DIR)/array_like_example

# Create directories if they don't exist
$(shell mkdir -p $(BIN_DIR))
$(shell mkdir -p $(OBJ_DIR))

# Source files (without the main server files)
LINKEDLIST_SRCS = $(wildcard $(SRC_DIR)/*.c)
LINKEDLIST_OBJS = $(patsubst $(SRC_DIR)/%.c, $(OBJ_DIR)/%.o, $(LINKEDLIST_SRCS))

# Main source
MAIN_SRC = array_like_example.c
MAIN_OBJ = $(OBJ_DIR)/array_like_example.o

# All objects
OBJS = $(LINKEDLIST_OBJS) $(MAIN_OBJ)

# Default target
all: $(TARGET)

# Create target executable
$(TARGET): $(OBJS)
	$(CC) $(OBJS) -o $(TARGET)

# Compile linkedlist source files
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c | $(OBJ_DIR)
	$(CC) $(CFLAGS) -c $< -o $@

# Compile main source file
$(MAIN_OBJ): $(MAIN_SRC) | $(OBJ_DIR)
	$(CC) $(CFLAGS) -c $< -o $@

# Create object directory
$(OBJ_DIR):
	mkdir -p $(OBJ_DIR)

# Clean build files
clean:
	rm -rf $(OBJ_DIR) $(TARGET)

# Run the example
run: $(TARGET)
	./$(TARGET)

.PHONY: all clean run
